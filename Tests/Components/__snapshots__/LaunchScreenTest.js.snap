// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing <LaunchScreen /> component renders as expected 1`] = `
<View
  loaded={
    Array [
      0,
    ]
  }
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
        "overflow": "hidden",
      },
      Object {
        "flex": 1,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "white",
          "flexDirection": "row",
          "height": 60,
          "justifyContent": "space-between",
          "paddingLeft": 30,
          "paddingRight": 30,
          "width": "100%",
        },
        Object {
          "backgroundColor": "white",
          "elevation": 0.3,
          "justifyContent": "space-between",
        },
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#bccad0",
            "fontSize": 20,
          },
          undefined,
          Object {
            "fontFamily": "Feather",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#bccad0",
          "fontSize": 22,
        }
      }
    />
    <View
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={null}
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#bccad0",
                "fontSize": 22,
              },
              Object {
                "padding": 8,
              },
              Object {
                "fontFamily": "Feather",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#E67D8F",
            "borderColor": "white",
            "borderRadius": 50,
            "borderWidth": 3,
            "height": 12,
            "position": "absolute",
            "right": 7,
            "top": 5,
            "width": 12,
          }
        }
      />
    </View>
  </View>
  <RCTScrollView
    alwaysBounceHorizontal={false}
    automaticallyAdjustContentInsets={false}
    bounces={false}
    contentContainerStyle={
      Object {
        "flex": 1,
      }
    }
    contentOffset={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    directionalLockEnabled={true}
    horizontal={true}
    keyboardDismissMode="on-drag"
    keyboardShouldPersistTaps="always"
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    overScrollMode="never"
    pagingEnabled={true}
    scrollEnabled={undefined}
    scrollEventThrottle={1}
    scrollsToTop={false}
    showsHorizontalScrollIndicator={false}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "flex": 1,
            "overflow": "hidden",
          }
        }
        testID={undefined}
      >
        <View
          style={
            Object {
              "alignItems": "stretch",
              "backgroundColor": "#fafafa",
              "flex": 1,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#fafafa",
                "flex": 1,
                "flexDirection": "column",
                "position": "relative",
              }
            }
          >
            <RCTScrollView
              contentContainerStyle={
                Object {
                  "flexGrow": 1,
                }
              }
              showsVerticalScrollIndicator={false}
            >
              <View>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#fafafa",
                        "flex": 1,
                        "flexDirection": "column",
                        "position": "relative",
                      },
                      Object {
                        "alignItems": "center",
                        "flex": 1,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "padding": 30,
                      },
                    ]
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": "#8F9CAE",
                          "fontSize": 33,
                        },
                        undefined,
                        Object {
                          "fontFamily": "Feather",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </RCTScrollView>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#6482e6",
                  "borderRadius": 300,
                  "bottom": 0,
                  "elevation": 3,
                  "flex": 1,
                  "margin": 25,
                  "opacity": 1,
                  "padding": 20,
                  "position": "absolute",
                  "right": 0,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={false}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 20,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Feather",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={null}
        testID={undefined}
      />
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "backgroundColor": "white",
        "elevation": 20,
      }
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "white",
          "elevation": 0,
          "paddingBottom": 2,
          "paddingTop": 2,
          "shadowColor": "black",
          "shadowOffset": Object {
            "height": 0.5,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 0.5,
          "zIndex": 1,
        }
      }
    >
      <View
        collapsable={undefined}
        pointerEvents="none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "backgroundColor": "rgba(152, 168, 171, 0)",
              "bottom": 0,
              "height": 2,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
              "width": 0,
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "overflow": "scroll",
          }
        }
      >
        <RCTScrollView
          alwaysBounceHorizontal={false}
          automaticallyAdjustContentInsets={false}
          bounces={false}
          collapsable={undefined}
          contentContainerStyle={
            Array [
              Object {
                "flexDirection": "row",
                "flexWrap": "nowrap",
              },
              Object {
                "flex": 1,
              },
            ]
          }
          contentOffset={undefined}
          horizontal={true}
          keyboardShouldPersistTaps="handled"
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          overScrollMode="never"
          scrollEnabled={undefined}
          scrollEventThrottle={1}
          scrollsToTop={false}
          showsHorizontalScrollIndicator={false}
        >
          <View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits="button"
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "alignItems": "center",
                      "flex": 1,
                      "justifyContent": "center",
                      "opacity": 1,
                      "padding": 12,
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": "#bccad0",
                          "fontSize": 20,
                        },
                        undefined,
                        Object {
                          "fontFamily": "Feather",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits="button"
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "alignItems": "center",
                      "flex": 1,
                      "justifyContent": "center",
                      "opacity": 0.7,
                      "padding": 12,
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": "#bccad0",
                          "fontSize": 20,
                        },
                        undefined,
                        Object {
                          "fontFamily": "Feather",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </View>
</View>
`;
